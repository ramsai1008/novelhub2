{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "dynamicRoutes": [
    {
      "page": "/novels/[novelId]",
      "regex": "^/novels/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPnovelId": "nxtPnovelId"
      },
      "namedRegex": "^/novels/(?<nxtPnovelId>[^/]+?)(?:/)?$"
    },
    {
      "page": "/novels/[novelId]/chapters",
      "regex": "^/novels/([^/]+?)/chapters(?:/)?$",
      "routeKeys": {
        "nxtPnovelId": "nxtPnovelId"
      },
      "namedRegex": "^/novels/(?<nxtPnovelId>[^/]+?)/chapters(?:/)?$"
    },
    {
      "page": "/novels/[novelId]/chapters/[chapterId]",
      "regex": "^/novels/([^/]+?)/chapters/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPnovelId": "nxtPnovelId",
        "nxtPchapterId": "nxtPchapterId"
      },
      "namedRegex": "^/novels/(?<nxtPnovelId>[^/]+?)/chapters/(?<nxtPchapterId>[^/]+?)(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/admin",
      "regex": "^/admin(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin(?:/)?$"
    },
    {
      "page": "/bookmarks",
      "regex": "^/bookmarks(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/bookmarks(?:/)?$"
    },
    {
      "page": "/dashboard",
      "regex": "^/dashboard(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard(?:/)?$"
    },
    {
      "page": "/genres",
      "regex": "^/genres(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/genres(?:/)?$"
    },
    {
      "page": "/history",
      "regex": "^/history(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/history(?:/)?$"
    },
    {
      "page": "/login",
      "regex": "^/login(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/login(?:/)?$"
    },
    {
      "page": "/novels",
      "regex": "^/novels(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/novels(?:/)?$"
    },
    {
      "page": "/register",
      "regex": "^/register(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/register(?:/)?$"
    },
    {
      "page": "/search",
      "regex": "^/search(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/search(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  },
  "rewrites": []
}